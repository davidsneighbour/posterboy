#!/bin/bash
# v2023.07.03

set -e
# IFS=$'\n\t'

REQUIRED_TOOLS=(
  git
  hugo
  typos
  curl
)

for TOOL in "${REQUIRED_TOOLS[@]}"; do
  if ! command -v "${TOOL}" >/dev/null; then
    echo "${TOOL} is required... "
    exit 1
  fi
done

FILE=.env
if [ -f "$FILE" ]; then
  echo "exporting .env"
  set -a # export all variables created next
  # this routine ranges through a folder of files that we don't explicitly know (@davidsneighbour)
  # see https://github.com/koalaman/shellcheck/wiki/SC1090
  # shellcheck source=/dev/null
  source "${FILE}"
  set +a # stop exporting
fi

SCRIPTPATH="$(
  cd "$(dirname "$0")" >/dev/null 2>&1 || exit
  pwd -P
)"
CURPATH="$(pwd -P)"

# quietly shutting down concurring hugo servers
/bin/bash -c '/usr/bin/killall -q -9 hugo; exit 0'

if test -f "$SCRIPTPATH"/bin/etc/hugo/replacements; then
  while read -ra __; do
    go mod edit -dropreplace "${__[0]}"
  done <"$SCRIPTPATH"/bin/etc/hugo/replacements
fi

hugo mod get -u ./...
hugo mod tidy

git add "${CURPATH}"/go.mod
FILE="${CURPATH}"/go.sum
if test -f "$FILE"; then
  git add go.sum
fi

rm -rf public/

RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)'

step="$1"
if [ -z "$1" ]; then
  step="patch"
fi

base=$(node -pe 'require("./package.json")["version"]')

MAJOR=$(echo $base | sed -e "s#$RE#\1#")
MINOR=$(echo $base | sed -e "s#$RE#\2#")
PATCH=$(echo $base | sed -e "s#$RE#\3#")

case "$step" in
major)
  ((MAJOR += 1))
  ((MINOR = 0))
  ((PATCH = 0))
  ;;
minor)
  ((MINOR += 1))
  ((PATCH = 0))
  ;;
patch)
  ((PATCH += 1))
  ;;
esac

RELEASE="$MAJOR.$MINOR.$PATCH"

# update version in citation configuration
FILE=CITATION.cff
if test -f "$FILE"; then
  sed -i "s/^version: .*/version: ${RELEASE}/" $FILE
  DATE=$(date +%F)
  sed -i "s/date-released: .*/date-released: ${DATE}/" $FILE
  git add $FILE
fi

# update scss theme documentation
npm run sassdoc
git add static

RELEASE_NOTES="$(npx commit-and-tag-version --dry-run | awk 'BEGIN { flag=0 } /^---$/ { if (flag == 0) { flag=1 } else { flag=2 }; next } flag == 1')"
echo "${RELEASE_NOTES}" >changes.md
